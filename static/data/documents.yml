- :title: About LCBO API
  :slug: about
  :menu: About
  :body: |
    The goal of LCBO API is to provide developers, hobbyists, and anyone who is
    interested with a way to create applications that take advantage of the
    unique benefits that come from having a single provider of alcoholic
    beverages in a large geographical area.

    The API is primarily designed to provide JSON data directly to mobile and
    web applications, but it is also capable of returning CSV data to be used
    directly in a spreadsheet application, just add `.csv` to the end of any
    LCBO API endpoint.

    If you plan on performing hundreds of queries per second for uses such as
    data analysis then you should download the latest [dataset](/docs/latest-dataset)
    and perform these operations offline. The datasets contain CSV data, if
    you need a different format please ask.

    ### Users

    Don&rsquo;t be shy, I'd love to hear how you or your company is using
    LCBO API. Here is a small sampling of some companies and people using
    LCBO API for fun, business, and mobile.

     * [Collective Arts Beer Finder](http://collectiveartsbrewing.com/beer-finder) by Collective Arts Brewing
     * [Liqbo](http://www.codebeard.io/#/work/liqbo) by Neil Fenton
     * [Dowser](http://theworkshed.com/projects/dowser) by Plank
     * [Lickur](http://www.lickur.com) by Neil Chudleigh
     * [Thirsty in Ontario?](http://thirsty.kx.nu) by Svante Richter
     * [Booze Run](http://calvinwinter.ca/booze-run) by Calvin Winter
     * [LCBO Stores](https://itunes.apple.com/ca/app/lcbo-stores/id587694374) by Chang Jun Lee
     * [LCBO Finder](https://itunes.apple.com/ca/app/lcbo-finder/id353448944) by Brierwood Design Cooperative
     * [WineAlign](http://winealign.com) by Uncork Solutions
     * [LCBO Search](http://lcbosearch.com) by Carsten Nielsen
     * [Liquor, ON](http://hippofoundry.com/lcbo/) by Taylan Pince

    ### Contact

    I would love to hear about how you are using the data or API. I would also
    love to hear from you if you want to do something with the data but are not
    sure how to get started. You can reach me through
    [Twitter](http://twitter.com/heycarsten), and by
    [email](mailto:heycarsten@gmail.com).

- :title: Conventions
  :slug: conventions
  :body: |
    ### Responses

    The default response format for the API is JSON. This means that you don't
    need to specify JSON in an `Accept` header or as an extension (.json) if
    that is the format you intend to request. Every response from the API is
    wrapped in a "container" that in its most basic form looks like this:

        {
          "status": 200,
          "message": null,
          "result": ...
        }

    This allows the API to return meta information along with the data you are
    requesting. For example, in the case of a
    [Stores with Product](/docs/stores-with-product) request the product object
    is returned with list of stores so that your application does not need to
    perform an additional request to obtain store information.

    ### JSON-P

    JSON-P stands for "JSON with padding" which is a very confusing way of
    saying JSON wrapped in a Javascript function call; I like to think of it as
    JSON-JS. It is used to circumvent browser security limitations when trying
    to access resources via Javascript from a different host than the containing
    page. That means you can use it to load LCBO API resources on a page that is
    not hosted on lcboapi.com, such as your website!

    One of the limitations to JSON-P is that the HTTP status can not be properly
    set to an error level because the `<script>` element that is dynamically
    written to the page will fail to load. Because of this all JSON-P requests
    return a 200 HTTP status code, regardless of the actual status. However, the
    `"status"` node in the response container always indicates the real status.

    To use JSON-P simply provide a `callback` parameter to your query. For
    example, to search products and return JSON-P you would request:

    <pre><code>/products?q=cider&<em>callback=</em>setJSON
    </code></pre>

    This will return the normal JSON response but wrap it in a function call:

    <pre><code><em>setJSON(</em>{"status":200, "message":null, "response": ...}<em>);</em>
    </code></pre>

    You can optionally specify a `.js` file extension for the resource, but the
    `Content-Type` header will always be set to `text/javascript` when returning
    JSON-P. For example the following request URI is the same as the one above.

    <pre><code>/products<em>.js</em>?q=cider&callback=setJSON
    </code></pre>

    ### Pagination

    When the API returns collections of items (stores, products, or inventories)
    it will paginate the results. You can control the number of items per page
    through the `per_page` parameter.

    A typical pager object looks like this:

        {
          "records_per_page": 20,
          "total_record_count": 608,
          "current_page_record_count": 20,
          "is_first_page": false,
          "is_final_page": false,
          "current_page": 5,
          "current_page_path": "/stores?page=5",
          "next_page": 6,
          "next_page_path": "/stores?page=6",
          "previous_page": 4,
          "previous_page_path": "/stores?page=4",
          "final_page": 31,
          "final_page_path": "/stores?page=31"
        }

    It contains all of the information you need (and more) to navigate through
    the pages in the result set.

    ### CSV and TSV Responses

    Many resources can be returned as CSV (comma separated values) or TSV
    (tab separated values). These results can then be easily imported into
    spreadsheet software such as Apple Numbers or Microsoft Excel. To return
    a resource in CSV or TSV format simply append the `.csv` or `.tsv`
    extension to the resource URI:

    <pre><code>/products<em>.csv</em>?order=price_in_cents.desc
    </code></pre>

    ### Errors

    When an error occurs the response will look something like this:

        {
          "error": "bad_query_error",
          "message": "A value supplied for the order parameter (id.desk) is not valid. It contains an invalid sort order (desk) for (id) try using: id.desc or id.asc instead.",
          "result": null,
          "status": 400
        }

    Error messages are always as descriptive as possible; one of the design
    goals for LCBO API is to make experiential learning (learning by trial and
    error) as easy as possible. There are a few different types of errors:

     * `no_results_error`: The geocoder returned no geometry for the geo query.
     * `over_limit_error`: The geocoder has reached its daily limit of requests.
     * `geocoder_error`: The geocoder can't geocode the query it was provided.
     * `not_found_error`: A resource was not found (404)
     * `bad_query_error`: One (or more) of the supplied query parameters is
       wrong.
     * `jsonp_error`: Supplied callback is not a valid format, or JSON-P is not
       being used correctly.

- :title: Frequently Asked Questions
  :slug: faq
  :menu: FAQ
  :body: |
    ### Is it free?

    Absolutely! There is no desire or intention to charge for the use of the
    API. I only ask that you tell me about what you are making with it. It costs
    roughly $50/month to host the project, donations are greatly appreciated!

    ### Where does the data come from?

    Why, from the LCBO of course! Their website is periodically crawled to get
    up-to-date information. Search engines like Google and Bing use this same
    technique to index web pages.

    ### Why did you do this?

    I feel that publicly available information should be free and accessible in
    as many ways as possible. I want to see what individuals will do with this
    information when presented with it in an accessible format... and I wanted
    an LCBO app for my iPhone. Read the [about section](/docs/about) for more
    information.

    ### Can you add barcode information products, please?

    I do not currently have access to barcode information for all products that
    the LCBO stocks. I understand how useful barcode data would be for products
    and if this ever changes it will certainly be announced on
    [@lcboapi](http://twitter.com/lcboapi)'s Twitter account.

    ### Can you add XML as a response format?

    No, because [JSON](http://www.json.org/xml.html) is a much better format for
    the output of this API.

    ### I'm a geek, how does it work?

    * [Ruby](http://tryruby.org)
    * [Rails](http://rubyonrails.org)
    * [Redis](http://redis.io)
    * [Postgres](http://postgresql.org)

    You can also check me out on GitHub, I'm [@heycarsten](https://github.com/heycarsten).
